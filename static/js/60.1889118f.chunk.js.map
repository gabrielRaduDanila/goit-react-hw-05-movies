{"version":3,"file":"static/js/60.1889118f.chunk.js","mappings":"+NACA,EAA8B,sC,uCC6D9B,EArDyB,WACvB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,UAAMC,EAAAA,GAAN,kBAAwBH,EAAxB,4BAAmDI,EAAAA,IAE5D,GAAqCC,EAAAA,EAAAA,GAAeH,GAA5CI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,KAE5B,GAAIF,EACF,OAAO,SAACG,EAAA,EAAD,IAET,GAAIF,EACF,OAAO,SAACG,EAAA,EAAD,IAGT,GAAIF,EAAM,CACR,IAAMG,EAAaH,EAAKI,QAExB,OAA0B,IAAtBD,EAAWE,QAEX,4BACE,SAAC,IAAD,CAAOC,MAAOC,EAAAA,EAAAA,0BACd,eAAIC,MAAO,CAAEC,UAAW,UAAxB,SAAoC,iCAKtC,yBACGN,EAAWO,KAAI,SAAAC,GACd,MAA8BA,EAAOC,eAA7BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YACRC,EAAgBJ,EAAOK,QACvBC,EAAKN,EAAOM,GAClB,OACE,4BACE,0BAAI,WAASJ,GAAQ,cACrB,gBACEK,IACEJ,EAAW,yCAC2BA,GAClCK,EAENC,IAAKP,EACLQ,UAAWb,KAEb,uBACGO,GAAgC,+BAZ3BE,EAgBb,KAIR,CACF,C","sources":["webpack://react-homework-template/./src/components/pages-components/MovieReviewsInfo/MovieReviewsInfo.module.css?be52","components/pages-components/MovieReviewsInfo/MovieReviewsInfo.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewImage\":\"MovieReviewsInfo_reviewImage__bHgHO\"};","import { useParams } from 'react-router-dom';\nimport { API_KEY, BASE_URL } from 'components/utils/utils';\nimport { useFetchMovies } from 'components/utils/fetchMovies';\nimport avatarImg from '../MovieCastInfo/avatartImage.png';\nimport style from './MovieReviewsInfo.module.css';\nimport Loading from '../Loading/Loading';\nimport ErrorPage from '../Error';\nimport { Empty } from 'antd';\n\nconst MovieReviewsInfo = () => {\n  const { movieId } = useParams();\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n\n  const { isLoading, isError, data } = useFetchMovies(url);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  if (isError) {\n    return <ErrorPage />;\n  }\n\n  if (data) {\n    const reviewData = data.results;\n\n    if (reviewData.length === 0) {\n      return (\n        <div>\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n          <h2 style={{ textAlign: 'center' }}>No review for this movie</h2>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {reviewData.map(review => {\n            const { name, avatar_path } = review.author_details;\n            const reviewContent = review.content;\n            const id = review.id;\n            return (\n              <div key={id}>\n                <h3>Author: {name || 'Unknown'}</h3>\n                <img\n                  src={\n                    avatar_path\n                      ? `https://image.tmdb.org/t/p/w500${avatar_path}`\n                      : avatarImg\n                  }\n                  alt={name}\n                  className={style.reviewImage}\n                />\n                <p>\n                  {reviewContent ? reviewContent : 'no review for this movie'}\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n  }\n};\nexport default MovieReviewsInfo;\n"],"names":["movieId","useParams","url","BASE_URL","API_KEY","useFetchMovies","isLoading","isError","data","Loading","Error","reviewData","results","length","image","Empty","style","textAlign","map","review","author_details","name","avatar_path","reviewContent","content","id","src","avatarImg","alt","className"],"sourceRoot":""}