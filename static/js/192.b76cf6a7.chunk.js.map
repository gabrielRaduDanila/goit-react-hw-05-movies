{"version":3,"file":"static/js/192.b76cf6a7.chunk.js","mappings":"gOACA,EAAqC,sCAArC,EAA0F,gCAA1F,EAAsI,6BAAtI,EAAmL,iCAAnL,EAAqO,kCAArO,EAAqR,+B,6BCyErR,MAnEmB,WAAO,IAAD,IACfA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,UAAMC,EAAAA,GAAN,kBAAwBH,EAAxB,oBAA2CI,EAAAA,IACpD,GAAqCC,EAAAA,EAAAA,GAAeH,GAA5CI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,KAEtBC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,SAA4B,EAE1C,GAAIN,EACF,OAAO,SAACO,EAAA,EAAD,IAET,GAAIN,EACF,OAAO,SAACO,EAAA,EAAD,IAET,GAAIN,EAAM,CACR,IAAMO,EAAG,yCAAqCP,EAAKQ,aAC7CC,EAAOT,EAAKU,aAAeV,EAAKU,aAAaC,MAAM,KAAK,GAAK,MAC7DC,EAAOZ,EAAKa,OAASb,EAAKY,KAC1BE,EAAYC,KAAKC,MAA0B,GAApBhB,EAAKiB,cAC5BC,EAwCV,SAAmBC,GACjB,IAAIC,EAAQ,GAKZ,OAJAD,EAAIE,SAAQ,SAAAC,GACVF,GAASE,EAAMV,KAAO,GACvB,IACDQ,EAAQA,GAAgB,KAEzB,CA/CkBG,CAAUvB,EAAKkB,QAG9B,OACE,kBAAMM,UAAWC,EAAjB,WACE,SAAC,KAAD,CAAMC,GAAIzB,EAAUuB,UAAWC,EAA/B,SAAmD,aAGnD,iBAAKD,UAAWC,EAAhB,WACE,gBAAKE,IAAK3B,EAAKQ,YAAcD,EAPjC,8EAOmDqB,IAAKhB,KACpD,iBAAKY,UAAWC,EAAhB,WACE,wBAAKb,EAAO,IAAMH,KAClB,yBAAG,eAAaK,EAAU,QAC1B,wBAAI,cACJ,uBAAId,EAAK6B,YACT,wBAAI,YACJ,uBAAIX,WAGR,iBAAKM,UAAWC,EAAhB,WACE,wBAAI,qBACJ,2BACE,yBACE,SAAC,KAAD,CAAMD,UAAWC,EAAmBC,GAAE,OAAtC,SAAgD,YAIlD,yBACE,SAAC,KAAD,CAAMF,UAAWC,EAAmBC,GAAE,UAAtC,SAAmD,qBAMzD,SAAC,KAAD,MAGL,CACF,C","sources":["webpack://react-homework-template/./src/components/pages-components/movie-info/MovieInfo.module.css?edb9","components/pages-components/movie-info/MoviesInfo.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieInfoContainer\":\"MovieInfo_movieInfoContainer__p1Vmb\",\"movieInfoBtn\":\"MovieInfo_movieInfoBtn__YFAnz\",\"movieInfo\":\"MovieInfo_movieInfo__nT-ql\",\"movieInfoText\":\"MovieInfo_movieInfoText__qKs-s\",\"additionalInfo\":\"MovieInfo_additionalInfo__hHdWY\",\"moreInfoBtn\":\"MovieInfo_moreInfoBtn__yyTGY\"};","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { API_KEY, BASE_URL } from 'components/utils/utils';\nimport { useFetchMovies } from 'components/utils/fetchMovies';\nimport style from './MovieInfo.module.css';\nimport Loading from '../Loading/Loading';\nimport ErrorPage from '../Error';\n\nconst MoviesInfo = () => {\n  const { movieId } = useParams();\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  const { isLoading, isError, data } = useFetchMovies(url);\n  const location = useLocation();\n  const backLink = location.state?.from ?? -2;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  if (isError) {\n    return <ErrorPage />;\n  }\n  if (data) {\n    const img = `https://image.tmdb.org/t/p/w500${data.poster_path}`;\n    const year = data.release_date ? data.release_date.split('-')[0] : 'N/A';\n    const name = data.title || data.name;\n    const userScore = Math.round(data.vote_average * 10);\n    const genres = getGenres(data.genres);\n    const defaultImg =\n      'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    return (\n      <main className={style.movieInfoContainer}>\n        <Link to={backLink} className={style.movieInfoBtn}>\n          Go back\n        </Link>\n        <div className={style.movieInfo}>\n          <img src={data.poster_path ? img : defaultImg} alt={name} />\n          <div className={style.movieInfoText}>\n            <h2>{name + ' ' + year}</h2>\n            <p>User Score: {userScore}%</p>\n            <h2>Overview</h2>\n            <p>{data.overview}</p>\n            <h2>Genres</h2>\n            <p>{genres}</p>\n          </div>\n        </div>\n        <div className={style.additionalInfo}>\n          <h3>Additional Info</h3>\n          <ul>\n            <li>\n              <Link className={style.moreInfoBtn} to={`cast`}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link className={style.moreInfoBtn} to={`reviews`}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <Outlet />\n      </main>\n    );\n  }\n};\n\nfunction getGenres(arr) {\n  let types = '';\n  arr.forEach(genre => {\n    types += genre.name + ' ';\n  });\n  types = types ? types : 'N/A';\n  return types;\n}\n\nexport default MoviesInfo;\n"],"names":["movieId","useParams","url","BASE_URL","API_KEY","useFetchMovies","isLoading","isError","data","backLink","useLocation","state","from","Loading","Error","img","poster_path","year","release_date","split","name","title","userScore","Math","round","vote_average","genres","arr","types","forEach","genre","getGenres","className","style","to","src","alt","overview"],"sourceRoot":""}